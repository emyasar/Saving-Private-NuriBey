/////////////
//This code generated by https://chat.openai.com/chat
///////////

package com.example.feednuribey

import android.os.AsyncTask
import android.os.Bundle
import android.util.Log
import android.widget.Button
import android.widget.ProgressBar
import androidx.appcompat.app.AppCompatActivity
import androidx.core.view.isVisible
import org.json.JSONObject
import java.io.OutputStreamWriter
import java.net.HttpURLConnection
import java.net.URL
import android.app.ProgressDialog
import android.widget.Toast


class MainActivity : AppCompatActivity() {

    private var sendButton: Button? = null

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)

        sendButton = findViewById(R.id.feed)

        sendButton?.setOnClickListener {
            val progressDialog = ProgressDialog(this@MainActivity)
            progressDialog.setMessage("Feeding...")
            progressDialog.show()
            SendData().execute()

            val background = object : Thread() {
                override fun run() {
                    try {
                        Thread.sleep(3000)
                    } catch (e: Exception) {
                        e.printStackTrace()
                    } finally {
                        // Dismiss the loading spinner
                        progressDialog.dismiss()

                        // Show a toast message to indicate that the work is done
                        runOnUiThread {
                            Toast.makeText(this@MainActivity, "NOM NOM NOM!", Toast.LENGTH_SHORT).show()
                        }
                    }
                }
            }
            background.start()

        }
    }

    private inner class SendData : AsyncTask<Void, Void, Void>() {
        override fun doInBackground(vararg params: Void): Void? {
            try {
                val url = URL("http://7.7.7.49:5000/run_app")
                val conn = url.openConnection() as HttpURLConnection
                conn.requestMethod = "POST"
                conn.setRequestProperty("Content-Type", "application/json; charset=UTF-8")
                conn.setRequestProperty("Accept", "application/json")
                conn.doOutput = true
                conn.doInput = true

                val jsonParam = JSONObject()
                jsonParam.put("app", "feeder.py")

                val os = OutputStreamWriter(conn.outputStream)
                os.write(jsonParam.toString())
                os.flush()
                os.close()

                Log.i("STATUS", conn.responseCode.toString())
                Log.i("MSG", conn.responseMessage)

                conn.disconnect()

            } catch (e: Exception) {
                e.printStackTrace()
            }
            return null
        }
    }

}